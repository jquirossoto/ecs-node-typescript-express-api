AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

################################### APPLICATION PARAMETERS ###################################
################################### APPLICATION CONDITIONS ###################################
################################### APPLICATION RESOURCES ################################### 

Resources:

  PetsAPIECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      ImageScanningConfiguration: 
        ScanOnPush: true
      ImageTagMutability: MUTABLE
      RepositoryName: pets-api
      RepositoryPolicyText:
        Version: 2012-10-17
        Statement:
          - Sid: CodeBuildAccess
            Effect: Allow
            Principal: 
              Service: codebuild.amazonaws.com
            Action: 
              - ecr:BatchGetImage
              - ecr:GetDownloadUrlForLayer

  PetsAPICodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Description: PetsAPICodeBuildRole
      RoleName: PetsAPICodeBuildRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole

  PetsAPICodeBuildBasePolicy:
    Type: AWS::IAM::Policy
    DependsOn:
      - PetsAPICodeBuildRole
    Properties: 
      PolicyName: PetsAPICodeBuildBasePolicy
      Roles:
        - !Ref PetsAPICodeBuildRole
      PolicyDocument:
        Version: 2012-10-17
        Statement: 
          - Effect: Allow
            Resource:
                # pets-api-codebuild is the name of the codebuild project
              - arn:aws:logs:us-east-1:186521841143:log-group:/aws/codebuild/pets-api-codebuild
              - arn:aws:logs:us-east-1:186521841143:log-group:/aws/codebuild/pets-api-codebuild:*
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
          - Effect: Allow
            Resource:
              - arn:aws:s3:::codepipeline-us-east-1-*
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketAcl
              - s3:GetBucketLocation
          - Effect: Allow
            Resource:
                # pets-api-codebuild is the name of the codebuild project
              - arn:aws:codebuild:us-east-1:186521841143:report-group/pets-api-codebuild-*
            Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
          - Effect: Allow
            Resource: 
                # /pets-api/dockerhub/* refers to the params in param store (username and password defined in codebuild project)
              - arn:aws:ssm:us-east-1:186521841143:parameter/pets-api/dockerhub/*
            Action: 
              - ssm:GetParameter
              - ssm:GetParameters
          - Effect: Allow
            Resource:
                # key used to encryt/decrypt DOCKERHUB_USERNAME & DOCKERHUB_PASSWORD params in codebuild project
              - arn:aws:kms:us-east-1:186521841143:key/d0b8969b-d55b-4f94-9091-5fc2d19c76d7
            Action: 
              - kms:Decrypt
              - kms:GenerateDataKey*
          - Effect: Allow
            Resource: '*'
            Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
              - ecr:PutImage
              - ecr:GetAuthorizationToken

  PetsAPICodeBuildCloudwatchPolicy:
    Type: AWS::IAM::Policy
    DependsOn:
      - PetsAPICodeBuildRole
    Properties:
      PolicyDocument: {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Effect": "Allow",
                  "Resource": [
                      #pets-api comes from PetsAPICodeBuild:LogsConfig:CloudWatchLogs:GroupName
                      "arn:aws:logs:us-east-1:186521841143:log-group:pets-api",
                      "arn:aws:logs:us-east-1:186521841143:log-group:pets-api:*"
                  ],
                  "Action": [
                      "logs:CreateLogGroup",
                      "logs:CreateLogStream",
                      "logs:PutLogEvents"
                  ]
              }
          ]
      }
      PolicyName: PetsAPICodeBuildRoleCloudwatchPolicy
      Roles:
        - !Ref PetsAPICodeBuildRole
        
  PetsAPICodeBuild:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - PetsAPICodeBuildRole
    Properties: 
      Artifacts:
        Type: CODEPIPELINE
        EncryptionDisabled: false
        Name: pets-api
        Packaging: NONE
      Cache:
        Type: NO_CACHE
      BadgeEnabled: false
      ConcurrentBuildLimit: 1
      Description: pets api codebuild
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables: 
          - Name: DOCKERHUB_USERNAME
            Type: PARAMETER_STORE
            Value: /pets-api/dockerhub/username
          - Name: DOCKERHUB_PASSWORD
            Type: PARAMETER_STORE
            Value: /pets-api/dockerhub/password
        Image: aws/codebuild/standard:5.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs: 
          GroupName: pets-api
          Status: ENABLED
          StreamName: pets-api
        S3Logs:
          Status: DISABLED
      Name: pets-api-codebuild
      QueuedTimeoutInMinutes: 480
      ServiceRole : !GetAtt PetsAPICodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
      SourceVersion: master
      TimeoutInMinutes: 60

  PetsAPICodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: {
          "Version": "2012-10-17",
          "Statement": [{
              "Effect": "Allow",
              "Principal": {
                  "Service": "codepipeline.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
          }]
      }
      Description: PetsAPICodePipelineServiceRole
      RoleName: PetsAPICodePipelineServiceRole

  PetsAPICodePipelinePolicy:
    Type: AWS::IAM::Policy
    DependsOn:
      - PetsAPICodePipelineServiceRole
    Properties: 
      PolicyDocument: {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Action": [
                      "iam:PassRole"
                  ],
                  "Resource": "*",
                  "Effect": "Allow",
                  "Condition": {
                      "StringEqualsIfExists": {
                          "iam:PassedToService": [
                              "cloudformation.amazonaws.com",
                              "elasticbeanstalk.amazonaws.com",
                              "ec2.amazonaws.com",
                              "ecs-tasks.amazonaws.com"
                          ]
                      }
                  }
              },
              {
                  "Action": [
                      "codecommit:CancelUploadArchive",
                      "codecommit:GetBranch",
                      "codecommit:GetCommit",
                      "codecommit:GetRepository",
                      "codecommit:GetUploadArchiveStatus",
                      "codecommit:UploadArchive"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
              },
              {
                  "Action": [
                      "codedeploy:CreateDeployment",
                      "codedeploy:GetApplication",
                      "codedeploy:GetApplicationRevision",
                      "codedeploy:GetDeployment",
                      "codedeploy:GetDeploymentConfig",
                      "codedeploy:RegisterApplicationRevision"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
              },
              {
                  "Action": [
                      "codestar-connections:UseConnection"
                  ],
                  # for some weird reason you need to explicitly defined the resource. * does not work
                  "Resource": [
                    "arn:aws:codestar-connections:us-east-1:186521841143:connection/614f4e2f-5920-4072-9f66-b220f2ed97dc"
                  ],
                  "Effect": "Allow"
              },
              {
                  "Action": [
                      "elasticbeanstalk:*",
                      "ec2:*",
                      "elasticloadbalancing:*",
                      "autoscaling:*",
                      "cloudwatch:*",
                      "s3:*",
                      "sns:*",
                      "cloudformation:*",
                      "rds:*",
                      "sqs:*",
                      "ecs:*"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
              },
              {
                  "Action": [
                      "lambda:InvokeFunction",
                      "lambda:ListFunctions"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
              },
              {
                  "Action": [
                      "opsworks:CreateDeployment",
                      "opsworks:DescribeApps",
                      "opsworks:DescribeCommands",
                      "opsworks:DescribeDeployments",
                      "opsworks:DescribeInstances",
                      "opsworks:DescribeStacks",
                      "opsworks:UpdateApp",
                      "opsworks:UpdateStack"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
              },
              {
                  "Action": [
                      "cloudformation:CreateStack",
                      "cloudformation:DeleteStack",
                      "cloudformation:DescribeStacks",
                      "cloudformation:UpdateStack",
                      "cloudformation:CreateChangeSet",
                      "cloudformation:DeleteChangeSet",
                      "cloudformation:DescribeChangeSet",
                      "cloudformation:ExecuteChangeSet",
                      "cloudformation:SetStackPolicy",
                      "cloudformation:ValidateTemplate"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
              },
              {
                  "Action": [
                      "codebuild:BatchGetBuilds",
                      "codebuild:StartBuild",
                      "codebuild:BatchGetBuildBatches",
                      "codebuild:StartBuildBatch"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
              },
              {
                  "Effect": "Allow",
                  "Action": [
                      "devicefarm:ListProjects",
                      "devicefarm:ListDevicePools",
                      "devicefarm:GetRun",
                      "devicefarm:GetUpload",
                      "devicefarm:CreateUpload",
                      "devicefarm:ScheduleRun"
                  ],
                  "Resource": "*"
              },
              {
                  "Effect": "Allow",
                  "Action": [
                      "servicecatalog:ListProvisioningArtifacts",
                      "servicecatalog:CreateProvisioningArtifact",
                      "servicecatalog:DescribeProvisioningArtifact",
                      "servicecatalog:DeleteProvisioningArtifact",
                      "servicecatalog:UpdateProduct"
                  ],
                  "Resource": "*"
              },
              {
                  "Effect": "Allow",
                  "Action": [
                      "cloudformation:ValidateTemplate"
                  ],
                  "Resource": "*"
              },
              {
                  "Effect": "Allow",
                  "Action": [
                      "ecr:DescribeImages"
                  ],
                  "Resource": "*"
              },
              {
                  "Effect": "Allow",
                  "Action": [
                      "states:DescribeExecution",
                      "states:DescribeStateMachine",
                      "states:StartExecution"
                  ],
                  "Resource": "*"
              },
              {
                  "Effect": "Allow",
                  "Action": [
                      "appconfig:StartDeployment",
                      "appconfig:StopDeployment",
                      "appconfig:GetDeployment"
                  ],
                  "Resource": "*"
              }
          ]
      }
      PolicyName: PetsAPICodePipelinePolicy
      Roles:
        - !Ref PetsAPICodePipelineServiceRole

  PetsAPIPipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn:
      - PetsAPICodePipelineServiceRole
      - PetsAPICodeBuild
    Properties: 
      ArtifactStore: 
        Type: S3
        # default location
        Location: codepipeline-us-east-1-91946427360
      Name: pets-api-pipeline
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt PetsAPICodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId: 
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              RunOrder: 1
              Configuration: {
                  "ConnectionArn": "arn:aws:codestar-connections:us-east-1:186521841143:connection/614f4e2f-5920-4072-9f66-b220f2ed97dc",
                  "BranchName": "master",
                  "OutputArtifactFormat": "CODE_ZIP",
                  "FullRepositoryId": "jquirossoto/ecs-node-typescript-express-api"
              }
              Namespace: SourceVariables
              OutputArtifacts: 
                - Name: SourceArtifact
              Region: us-east-1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              RunOrder: 1
              Configuration: {
                  "ProjectName": "pets-api-codebuild"
              }
              InputArtifacts:
                - Name: SourceArtifact
              Namespace: BuildVariables
              OutputArtifacts:
                - Name: BuildArtifact
              Region: us-east-1

  PetsAPITaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Description: PetsAPITaskExecutionRole
      RoleName: PetsAPITaskExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole

  PetsAPITaskExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "*"
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Resource: "*"
      PolicyName: PetsAPITaskExecutionPolicy
      Roles:
        - !Ref PetsAPITaskExecutionRole